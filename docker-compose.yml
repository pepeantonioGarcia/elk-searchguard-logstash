# docker compose to startup a local ES cluster
version: '3.6'
services:
  elasticsearch:
    image: xtermi2/elasticsearch-searchguard:7.13.4
    env_file: .env.elastic
    container_name: elasticsearch    
    volumes:
      - ./es_config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./out:/usr/share/elasticsearch/config/certificates
      - elasticsearch1:/usr/share/elasticsearch/data      
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    restart: always
    healthcheck:
      test: curl -X GET -f -k -u 'elastic:elastic' https://localhost:9200 || exit 1
      interval: 30s
      timeout: 25s
      retries: 10
    networks:
      - esnet
  
  kibana:
    env_file: .env.kibana
    image: xtermi2/kibana-searchguard:7.13.4
    container_name: kibana    
    ports:
      - "5601:5601"
    restart: always
    healthcheck:
      test: curl -X GET -f http://localhost:5601/status || exit 1
      interval: 30s
      timeout: 5s
      retries: 10
    depends_on:
      - "elasticsearch"
    networks:
      - esnet
  redis-cache:
    image: redis:6.2
    networks:
      - esnet   

  logstash-agent:
    image: logstash:7.13.4
    mem_limit: 512m
    mem_reservation: 128M
    volumes:
      - ./logstash-agent:/etc/logstash
    command: logstash -f /etc/logstash/logstash.conf
    networks:
      - esnet
    depends_on:
      - "elasticsearch"
    ports:
      - 12201:12201/udp
  logstash-central:
    image: logstash:7.13.4
    env_file: .env.logstash
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.5    
    volumes:
      - ./logstash-central:/etc/logstash
    command: logstash -f /etc/logstash/logstash.conf
    networks:
      - esnet
    depends_on:
      - "elasticsearch"

networks:
  esnet:
volumes: 
  elasticsearch1:  